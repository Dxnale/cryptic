name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up UV
      uses: astral-sh/setup-uv@v3
      with:
        version: "0.5"
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --frozen --extra dev

    - name: Lint with ruff
      run: uv run ruff check cryptic tests

    - name: Format with ruff
      run: uv run ruff format --check cryptic tests

    - name: Test with pytest
      run: uv run pytest --cov=cryptic --cov-report=xml --cov-report=term-missing

    - name: Upload Coverage Data
      uses: actions/upload-artifact@v4
      with:
        name: covdata-${{ matrix.python-version }}
        path: coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Download Coverage Reports
        uses: actions/download-artifact@v4
        with:
          pattern: covdata-*
          merge-multiple: true

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          output: both
          hide_complexity: true
          thresholds: "50 50"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: code-coverage-results.md
